/*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */

'use strict'

function peg$subclass(child, parent) {
  function ctor() {
    this.constructor = child
  }
  ctor.prototype = parent.prototype
  child.prototype = new ctor()
}

function peg$SyntaxError(message, expected, found, location) {
  this.message = message
  this.expected = expected
  this.found = found
  this.location = location
  this.name = 'SyntaxError'

  if (typeof Error.captureStackTrace === 'function') {
    Error.captureStackTrace(this, peg$SyntaxError)
  }
}

peg$subclass(peg$SyntaxError, Error)

peg$SyntaxError.buildMessage = function (expected, found) {
  var DESCRIBE_EXPECTATION_FNS = {
    literal: function (expectation) {
      return '"' + literalEscape(expectation.text) + '"'
    },

    class: function (expectation) {
      var escapedParts = ''
      var i

      for (i = 0; i < expectation.parts.length; i++) {
        escapedParts +=
          expectation.parts[i] instanceof Array
            ? classEscape(expectation.parts[i][0]) +
              '-' +
              classEscape(expectation.parts[i][1])
            : classEscape(expectation.parts[i])
      }

      return '[' + (expectation.inverted ? '^' : '') + escapedParts + ']'
    },

    any: function (expectation) {
      return 'any character'
    },

    end: function (expectation) {
      return 'end of input'
    },

    other: function (expectation) {
      return expectation.description
    }
  }

  function hex(ch) {
    return ch.charCodeAt(0).toString(16).toUpperCase()
  }

  function literalEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/"/g, '\\"')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch)
      })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch)
      })
  }

  function classEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/\]/g, '\\]')
      .replace(/\^/g, '\\^')
      .replace(/-/g, '\\-')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch)
      })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch)
      })
  }

  function describeExpectation(expectation) {
    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation)
  }

  function describeExpected(expected) {
    var descriptions = new Array(expected.length)
    var i
    var j

    for (i = 0; i < expected.length; i++) {
      descriptions[i] = describeExpectation(expected[i])
    }

    descriptions.sort()

    if (descriptions.length > 0) {
      for (i = 1, j = 1; i < descriptions.length; i++) {
        if (descriptions[i - 1] !== descriptions[i]) {
          descriptions[j] = descriptions[i]
          j++
        }
      }
      descriptions.length = j
    }

    switch (descriptions.length) {
      case 1:
        return descriptions[0]

      case 2:
        return descriptions[0] + ' or ' + descriptions[1]

      default:
        return (
          descriptions.slice(0, -1).join(', ') +
          ', or ' +
          descriptions[descriptions.length - 1]
        )
    }
  }

  function describeFound(found) {
    return found ? '"' + literalEscape(found) + '"' : 'end of input'
  }

  return (
    'Expected ' +
    describeExpected(expected) +
    ' but ' +
    describeFound(found) +
    ' found.'
  )
}

function peg$parse(input, options) {
  options = options !== void 0 ? options : {}

  var peg$FAILED = {}

  var peg$startRuleFunctions = { Lines: peg$parseLines }
  var peg$startRuleFunction = peg$parseLines

  var peg$c0 = peg$otherExpectation('lines')
  var peg$c1 = function (a, b) {
    return [a, ...b].filter((e) => e !== '')
  }
  var peg$c2 = peg$otherExpectation('linen')
  var peg$c3 = function (line) {
    return line
  }
  var peg$c4 = peg$otherExpectation('line')
  var peg$c5 = peg$otherExpectation('dataline')
  var peg$c6 = '.data'
  var peg$c7 = peg$literalExpectation('.data', false)
  var peg$c8 = peg$otherExpectation('pc')
  var peg$c9 = '.pc'
  var peg$c10 = peg$literalExpectation('.pc', false)
  var peg$c11 = function (address) {
    return { pc: address.value }
  }
  var peg$c12 = peg$otherExpectation('program')
  var peg$c13 = function (opcode, params) {
    return { opcode, params }
  }
  var peg$c14 = peg$otherExpectation('label')
  var peg$c15 = ':'
  var peg$c16 = peg$literalExpectation(':', false)
  var peg$c17 = function (label) {
    return label
  }
  var peg$c18 = function (label) {
    return { label }
  }
  var peg$c19 = peg$otherExpectation('opcode')
  var peg$c20 = 'adc'
  var peg$c21 = peg$literalExpectation('ADC', true)
  var peg$c22 = 'and'
  var peg$c23 = peg$literalExpectation('AND', true)
  var peg$c24 = 'asl'
  var peg$c25 = peg$literalExpectation('ASL', true)
  var peg$c26 = 'bcc'
  var peg$c27 = peg$literalExpectation('BCC', true)
  var peg$c28 = 'bcs'
  var peg$c29 = peg$literalExpectation('BCS', true)
  var peg$c30 = 'beq'
  var peg$c31 = peg$literalExpectation('BEQ', true)
  var peg$c32 = 'bit'
  var peg$c33 = peg$literalExpectation('BIT', true)
  var peg$c34 = 'bmi'
  var peg$c35 = peg$literalExpectation('BMI', true)
  var peg$c36 = 'bne'
  var peg$c37 = peg$literalExpectation('BNE', true)
  var peg$c38 = 'bpl'
  var peg$c39 = peg$literalExpectation('BPL', true)
  var peg$c40 = 'brk'
  var peg$c41 = peg$literalExpectation('BRK', true)
  var peg$c42 = 'bvc'
  var peg$c43 = peg$literalExpectation('BVC', true)
  var peg$c44 = 'bvs'
  var peg$c45 = peg$literalExpectation('BVS', true)
  var peg$c46 = 'clc'
  var peg$c47 = peg$literalExpectation('CLC', true)
  var peg$c48 = 'cld'
  var peg$c49 = peg$literalExpectation('CLD', true)
  var peg$c50 = 'cli'
  var peg$c51 = peg$literalExpectation('CLI', true)
  var peg$c52 = 'clv'
  var peg$c53 = peg$literalExpectation('CLV', true)
  var peg$c54 = 'cmp'
  var peg$c55 = peg$literalExpectation('CMP', true)
  var peg$c56 = 'cpx'
  var peg$c57 = peg$literalExpectation('CPX', true)
  var peg$c58 = 'cpy'
  var peg$c59 = peg$literalExpectation('CPY', true)
  var peg$c60 = 'dec'
  var peg$c61 = peg$literalExpectation('DEC', true)
  var peg$c62 = 'dex'
  var peg$c63 = peg$literalExpectation('DEX', true)
  var peg$c64 = 'dey'
  var peg$c65 = peg$literalExpectation('DEY', true)
  var peg$c66 = 'eor'
  var peg$c67 = peg$literalExpectation('EOR', true)
  var peg$c68 = 'inc'
  var peg$c69 = peg$literalExpectation('INC', true)
  var peg$c70 = 'inx'
  var peg$c71 = peg$literalExpectation('INX', true)
  var peg$c72 = 'iny'
  var peg$c73 = peg$literalExpectation('INY', true)
  var peg$c74 = 'jmp'
  var peg$c75 = peg$literalExpectation('JMP', true)
  var peg$c76 = 'jsr'
  var peg$c77 = peg$literalExpectation('JSR', true)
  var peg$c78 = 'lda'
  var peg$c79 = peg$literalExpectation('LDA', true)
  var peg$c80 = 'ldx'
  var peg$c81 = peg$literalExpectation('LDX', true)
  var peg$c82 = 'ldy'
  var peg$c83 = peg$literalExpectation('LDY', true)
  var peg$c84 = 'lsr'
  var peg$c85 = peg$literalExpectation('LSR', true)
  var peg$c86 = 'nop'
  var peg$c87 = peg$literalExpectation('NOP', true)
  var peg$c88 = 'ora'
  var peg$c89 = peg$literalExpectation('ORA', true)
  var peg$c90 = 'pha'
  var peg$c91 = peg$literalExpectation('PHA', true)
  var peg$c92 = 'php'
  var peg$c93 = peg$literalExpectation('PHP', true)
  var peg$c94 = 'pla'
  var peg$c95 = peg$literalExpectation('PLA', true)
  var peg$c96 = 'plp'
  var peg$c97 = peg$literalExpectation('PLP', true)
  var peg$c98 = 'rol'
  var peg$c99 = peg$literalExpectation('ROL', true)
  var peg$c100 = 'ror'
  var peg$c101 = peg$literalExpectation('ROR', true)
  var peg$c102 = 'rti'
  var peg$c103 = peg$literalExpectation('RTI', true)
  var peg$c104 = 'rts'
  var peg$c105 = peg$literalExpectation('RTS', true)
  var peg$c106 = 'sbc'
  var peg$c107 = peg$literalExpectation('SBC', true)
  var peg$c108 = 'sec'
  var peg$c109 = peg$literalExpectation('SEC', true)
  var peg$c110 = 'sed'
  var peg$c111 = peg$literalExpectation('SED', true)
  var peg$c112 = 'sei'
  var peg$c113 = peg$literalExpectation('SEI', true)
  var peg$c114 = 'sta'
  var peg$c115 = peg$literalExpectation('STA', true)
  var peg$c116 = 'stx'
  var peg$c117 = peg$literalExpectation('STX', true)
  var peg$c118 = 'sty'
  var peg$c119 = peg$literalExpectation('STY', true)
  var peg$c120 = 'tax'
  var peg$c121 = peg$literalExpectation('TAX', true)
  var peg$c122 = 'tay'
  var peg$c123 = peg$literalExpectation('TAY', true)
  var peg$c124 = 'tsx'
  var peg$c125 = peg$literalExpectation('TSX', true)
  var peg$c126 = 'txa'
  var peg$c127 = peg$literalExpectation('TXA', true)
  var peg$c128 = 'txs'
  var peg$c129 = peg$literalExpectation('TXS', true)
  var peg$c130 = 'tya'
  var peg$c131 = peg$literalExpectation('TYA', true)
  var peg$c132 = peg$otherExpectation('params')
  var peg$c133 = 'a'
  var peg$c134 = peg$literalExpectation('A', true)
  var peg$c135 = '('
  var peg$c136 = peg$literalExpectation('(', false)
  var peg$c137 = ')'
  var peg$c138 = peg$literalExpectation(')', false)
  var peg$c139 = function (address) {
    return { ...address, mode: 'ind' }
  }
  var peg$c140 = peg$otherExpectation('Indexed Indirect')
  var peg$c141 = ',x)'
  var peg$c142 = peg$literalExpectation(',X)', true)
  var peg$c143 = function (address) {
    return { ...address, mode: 'izx' }
  }
  var peg$c144 = peg$otherExpectation('Indirect Indexed')
  var peg$c145 = '),y'
  var peg$c146 = peg$literalExpectation('),Y', true)
  var peg$c147 = function (address) {
    return { ...address, mode: 'izy' }
  }
  var peg$c148 = peg$otherExpectation('address')
  var peg$c149 = ','
  var peg$c150 = peg$literalExpectation(',', false)
  var peg$c151 = function (address, reg) {
    return { ...address, offsetRegister: reg }
  }
  var peg$c152 = peg$otherExpectation('ZP0 address')
  var peg$c153 = '$'
  var peg$c154 = peg$literalExpectation('$', false)
  var peg$c155 = function (value) {
    return { mode: 'zp0', value }
  }
  var peg$c156 = peg$otherExpectation('absolute address')
  var peg$c157 = function (value) {
    return { mode: 'abs', value }
  }
  var peg$c158 = 'x'
  var peg$c159 = peg$literalExpectation('X', true)
  var peg$c160 = 'y'
  var peg$c161 = peg$literalExpectation('Y', true)
  var peg$c162 = peg$otherExpectation('imm')
  var peg$c163 = '#'
  var peg$c164 = peg$literalExpectation('#', false)
  var peg$c165 = function (number) {
    return { mode: 'imm', value: [number] }
  }
  var peg$c166 = peg$otherExpectation('num')
  var peg$c167 = peg$otherExpectation('Hex')
  var peg$c168 = function (hex) {
    return hex[0]
  }
  var peg$c169 = /^[0-9a-fA-F]/
  var peg$c170 = peg$classExpectation(
    [
      ['0', '9'],
      ['a', 'f'],
      ['A', 'F']
    ],
    false,
    false
  )
  var peg$c171 = function (digits) {
    return [parseInt(digits.join(''), 16)]
  }
  var peg$c172 = function (digitHigh, digitLow) {
    return [parseInt(digitLow.join(''), 16), parseInt(digitHigh.join(''), 16)]
  }
  var peg$c173 = peg$otherExpectation('BinStr')
  var peg$c174 = '%'
  var peg$c175 = peg$literalExpectation('%', false)
  var peg$c176 = function (number) {
    return number
  }
  var peg$c177 = peg$otherExpectation('bin')
  var peg$c178 = /^[01]/
  var peg$c179 = peg$classExpectation(['0', '1'], false, false)
  var peg$c180 = function (digits) {
    const num = parseInt(digits.join(''), 2)
    if (num > 255) throw new Error('Overflow')
    return num
  }
  var peg$c181 = peg$otherExpectation('integer')
  var peg$c182 = /^[0-9]/
  var peg$c183 = peg$classExpectation([['0', '9']], false, false)
  var peg$c184 = function () {
    return parseInt(text(), 10)
  }
  var peg$c185 = peg$otherExpectation('string')
  var peg$c186 = /^[a-zA-Z0-9]/
  var peg$c187 = peg$classExpectation(
    [
      ['a', 'z'],
      ['A', 'Z'],
      ['0', '9']
    ],
    false,
    false
  )
  var peg$c188 = function () {
    return text()
  }
  var peg$c189 = peg$otherExpectation('whitespace')
  var peg$c190 = /^[ \t\n\r]/
  var peg$c191 = peg$classExpectation([' ', '\t', '\n', '\r'], false, false)
  var peg$c192 = /^[ \t]/
  var peg$c193 = peg$classExpectation([' ', '\t'], false, false)
  var peg$c194 = peg$otherExpectation('newline')
  var peg$c195 = /^[\n\r]/
  var peg$c196 = peg$classExpectation(['\n', '\r'], false, false)

  var peg$currPos = 0
  var peg$savedPos = 0
  var peg$posDetailsCache = [{ line: 1, column: 1 }]
  var peg$maxFailPos = 0
  var peg$maxFailExpected = []
  var peg$silentFails = 0

  var peg$result

  if ('startRule' in options) {
    if (!(options.startRule in peg$startRuleFunctions)) {
      throw new Error(
        'Can\'t start parsing from rule "' + options.startRule + '".'
      )
    }

    peg$startRuleFunction = peg$startRuleFunctions[options.startRule]
  }

  function text() {
    return input.substring(peg$savedPos, peg$currPos)
  }

  function location() {
    return peg$computeLocation(peg$savedPos, peg$currPos)
  }

  function expected(description, location) {
    location =
      location !== void 0
        ? location
        : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildStructuredError(
      [peg$otherExpectation(description)],
      input.substring(peg$savedPos, peg$currPos),
      location
    )
  }

  function error(message, location) {
    location =
      location !== void 0
        ? location
        : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildSimpleError(message, location)
  }

  function peg$literalExpectation(text, ignoreCase) {
    return { type: 'literal', text: text, ignoreCase: ignoreCase }
  }

  function peg$classExpectation(parts, inverted, ignoreCase) {
    return {
      type: 'class',
      parts: parts,
      inverted: inverted,
      ignoreCase: ignoreCase
    }
  }

  function peg$anyExpectation() {
    return { type: 'any' }
  }

  function peg$endExpectation() {
    return { type: 'end' }
  }

  function peg$otherExpectation(description) {
    return { type: 'other', description: description }
  }

  function peg$computePosDetails(pos) {
    var details = peg$posDetailsCache[pos]
    var p

    if (details) {
      return details
    } else {
      p = pos - 1
      while (!peg$posDetailsCache[p]) {
        p--
      }

      details = peg$posDetailsCache[p]
      details = {
        line: details.line,
        column: details.column
      }

      while (p < pos) {
        if (input.charCodeAt(p) === 10) {
          details.line++
          details.column = 1
        } else {
          details.column++
        }

        p++
      }

      peg$posDetailsCache[pos] = details
      return details
    }
  }

  function peg$computeLocation(startPos, endPos) {
    var startPosDetails = peg$computePosDetails(startPos)
    var endPosDetails = peg$computePosDetails(endPos)

    return {
      start: {
        offset: startPos,
        line: startPosDetails.line,
        column: startPosDetails.column
      },
      end: {
        offset: endPos,
        line: endPosDetails.line,
        column: endPosDetails.column
      }
    }
  }

  function peg$fail(expected) {
    if (peg$currPos < peg$maxFailPos) {
      return
    }

    if (peg$currPos > peg$maxFailPos) {
      peg$maxFailPos = peg$currPos
      peg$maxFailExpected = []
    }

    peg$maxFailExpected.push(expected)
  }

  function peg$buildSimpleError(message, location) {
    return new peg$SyntaxError(message, null, null, location)
  }

  function peg$buildStructuredError(expected, found, location) {
    return new peg$SyntaxError(
      peg$SyntaxError.buildMessage(expected, found),
      expected,
      found,
      location
    )
  }

  function peg$parseLines() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    s1 = peg$parseLineWithNewline()
    if (s1 !== peg$FAILED) {
      s2 = []
      s3 = peg$parseLineWithNewline()
      while (s3 !== peg$FAILED) {
        s2.push(s3)
        s3 = peg$parseLineWithNewline()
      }
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0
        s1 = peg$c1(s1, s2)
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c0)
      }
    }

    return s0
  }

  function peg$parseLineWithNewline() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    s1 = peg$parse_()
    if (s1 !== peg$FAILED) {
      s2 = peg$parseLine()
      if (s2 !== peg$FAILED) {
        s3 = peg$parse_N()
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0
          s1 = peg$c3(s2)
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c2)
      }
    }

    return s0
  }

  function peg$parseLine() {
    var s0, s1

    peg$silentFails++
    s0 = peg$parseLabelDeclaration()
    if (s0 === peg$FAILED) {
      s0 = peg$parseProgram()
      if (s0 === peg$FAILED) {
        s0 = peg$parseProgramCounter()
        if (s0 === peg$FAILED) {
          s0 = peg$parseDataLine()
        }
      }
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c4)
      }
    }

    return s0
  }

  function peg$parseDataLine() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    if (input.substr(peg$currPos, 5) === peg$c6) {
      s1 = peg$c6
      peg$currPos += 5
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c7)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_()
      if (s2 !== peg$FAILED) {
        s3 = peg$parseAbsoluteAddress()
        if (s3 !== peg$FAILED) {
          s1 = [s1, s2, s3]
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c5)
      }
    }

    return s0
  }

  function peg$parseProgramCounter() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    if (input.substr(peg$currPos, 3) === peg$c9) {
      s1 = peg$c9
      peg$currPos += 3
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c10)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_()
      if (s2 !== peg$FAILED) {
        s3 = peg$parseAbsoluteAddress()
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0
          s1 = peg$c11(s3)
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c8)
      }
    }

    return s0
  }

  function peg$parseProgram() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    s1 = peg$parseOpcode()
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_S()
      if (s2 === peg$FAILED) {
        s2 = null
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseParameters()
        if (s3 === peg$FAILED) {
          s3 = null
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0
          s1 = peg$c13(s1, s3)
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c12)
      }
    }

    return s0
  }

  function peg$parseLabelDeclaration() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    s1 = peg$parseLabel()
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_S()
      if (s2 === peg$FAILED) {
        s2 = null
      }
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 58) {
          s3 = peg$c15
          peg$currPos++
        } else {
          s3 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c16)
          }
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0
          s1 = peg$c17(s1)
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c14)
      }
    }

    return s0
  }

  function peg$parseLabel() {
    var s0, s1

    s0 = peg$currPos
    s1 = peg$parseString()
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0
      s1 = peg$c18(s1)
    }
    s0 = s1

    return s0
  }

  function peg$parseOpcode() {
    var s0, s1

    peg$silentFails++
    if (input.substr(peg$currPos, 3).toLowerCase() === peg$c20) {
      s0 = input.substr(peg$currPos, 3)
      peg$currPos += 3
    } else {
      s0 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c21)
      }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c22) {
        s0 = input.substr(peg$currPos, 3)
        peg$currPos += 3
      } else {
        s0 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c23)
        }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c24) {
          s0 = input.substr(peg$currPos, 3)
          peg$currPos += 3
        } else {
          s0 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c25)
          }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3).toLowerCase() === peg$c26) {
            s0 = input.substr(peg$currPos, 3)
            peg$currPos += 3
          } else {
            s0 = peg$FAILED
            if (peg$silentFails === 0) {
              peg$fail(peg$c27)
            }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c28) {
              s0 = input.substr(peg$currPos, 3)
              peg$currPos += 3
            } else {
              s0 = peg$FAILED
              if (peg$silentFails === 0) {
                peg$fail(peg$c29)
              }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 3).toLowerCase() === peg$c30) {
                s0 = input.substr(peg$currPos, 3)
                peg$currPos += 3
              } else {
                s0 = peg$FAILED
                if (peg$silentFails === 0) {
                  peg$fail(peg$c31)
                }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 3).toLowerCase() === peg$c32) {
                  s0 = input.substr(peg$currPos, 3)
                  peg$currPos += 3
                } else {
                  s0 = peg$FAILED
                  if (peg$silentFails === 0) {
                    peg$fail(peg$c33)
                  }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 3).toLowerCase() === peg$c34) {
                    s0 = input.substr(peg$currPos, 3)
                    peg$currPos += 3
                  } else {
                    s0 = peg$FAILED
                    if (peg$silentFails === 0) {
                      peg$fail(peg$c35)
                    }
                  }
                  if (s0 === peg$FAILED) {
                    if (
                      input.substr(peg$currPos, 3).toLowerCase() === peg$c36
                    ) {
                      s0 = input.substr(peg$currPos, 3)
                      peg$currPos += 3
                    } else {
                      s0 = peg$FAILED
                      if (peg$silentFails === 0) {
                        peg$fail(peg$c37)
                      }
                    }
                    if (s0 === peg$FAILED) {
                      if (
                        input.substr(peg$currPos, 3).toLowerCase() === peg$c38
                      ) {
                        s0 = input.substr(peg$currPos, 3)
                        peg$currPos += 3
                      } else {
                        s0 = peg$FAILED
                        if (peg$silentFails === 0) {
                          peg$fail(peg$c39)
                        }
                      }
                      if (s0 === peg$FAILED) {
                        if (
                          input.substr(peg$currPos, 3).toLowerCase() === peg$c40
                        ) {
                          s0 = input.substr(peg$currPos, 3)
                          peg$currPos += 3
                        } else {
                          s0 = peg$FAILED
                          if (peg$silentFails === 0) {
                            peg$fail(peg$c41)
                          }
                        }
                        if (s0 === peg$FAILED) {
                          if (
                            input.substr(peg$currPos, 3).toLowerCase() ===
                            peg$c42
                          ) {
                            s0 = input.substr(peg$currPos, 3)
                            peg$currPos += 3
                          } else {
                            s0 = peg$FAILED
                            if (peg$silentFails === 0) {
                              peg$fail(peg$c43)
                            }
                          }
                          if (s0 === peg$FAILED) {
                            if (
                              input.substr(peg$currPos, 3).toLowerCase() ===
                              peg$c44
                            ) {
                              s0 = input.substr(peg$currPos, 3)
                              peg$currPos += 3
                            } else {
                              s0 = peg$FAILED
                              if (peg$silentFails === 0) {
                                peg$fail(peg$c45)
                              }
                            }
                            if (s0 === peg$FAILED) {
                              if (
                                input.substr(peg$currPos, 3).toLowerCase() ===
                                peg$c46
                              ) {
                                s0 = input.substr(peg$currPos, 3)
                                peg$currPos += 3
                              } else {
                                s0 = peg$FAILED
                                if (peg$silentFails === 0) {
                                  peg$fail(peg$c47)
                                }
                              }
                              if (s0 === peg$FAILED) {
                                if (
                                  input.substr(peg$currPos, 3).toLowerCase() ===
                                  peg$c48
                                ) {
                                  s0 = input.substr(peg$currPos, 3)
                                  peg$currPos += 3
                                } else {
                                  s0 = peg$FAILED
                                  if (peg$silentFails === 0) {
                                    peg$fail(peg$c49)
                                  }
                                }
                                if (s0 === peg$FAILED) {
                                  if (
                                    input
                                      .substr(peg$currPos, 3)
                                      .toLowerCase() === peg$c50
                                  ) {
                                    s0 = input.substr(peg$currPos, 3)
                                    peg$currPos += 3
                                  } else {
                                    s0 = peg$FAILED
                                    if (peg$silentFails === 0) {
                                      peg$fail(peg$c51)
                                    }
                                  }
                                  if (s0 === peg$FAILED) {
                                    if (
                                      input
                                        .substr(peg$currPos, 3)
                                        .toLowerCase() === peg$c52
                                    ) {
                                      s0 = input.substr(peg$currPos, 3)
                                      peg$currPos += 3
                                    } else {
                                      s0 = peg$FAILED
                                      if (peg$silentFails === 0) {
                                        peg$fail(peg$c53)
                                      }
                                    }
                                    if (s0 === peg$FAILED) {
                                      if (
                                        input
                                          .substr(peg$currPos, 3)
                                          .toLowerCase() === peg$c54
                                      ) {
                                        s0 = input.substr(peg$currPos, 3)
                                        peg$currPos += 3
                                      } else {
                                        s0 = peg$FAILED
                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$c55)
                                        }
                                      }
                                      if (s0 === peg$FAILED) {
                                        if (
                                          input
                                            .substr(peg$currPos, 3)
                                            .toLowerCase() === peg$c56
                                        ) {
                                          s0 = input.substr(peg$currPos, 3)
                                          peg$currPos += 3
                                        } else {
                                          s0 = peg$FAILED
                                          if (peg$silentFails === 0) {
                                            peg$fail(peg$c57)
                                          }
                                        }
                                        if (s0 === peg$FAILED) {
                                          if (
                                            input
                                              .substr(peg$currPos, 3)
                                              .toLowerCase() === peg$c58
                                          ) {
                                            s0 = input.substr(peg$currPos, 3)
                                            peg$currPos += 3
                                          } else {
                                            s0 = peg$FAILED
                                            if (peg$silentFails === 0) {
                                              peg$fail(peg$c59)
                                            }
                                          }
                                          if (s0 === peg$FAILED) {
                                            if (
                                              input
                                                .substr(peg$currPos, 3)
                                                .toLowerCase() === peg$c60
                                            ) {
                                              s0 = input.substr(peg$currPos, 3)
                                              peg$currPos += 3
                                            } else {
                                              s0 = peg$FAILED
                                              if (peg$silentFails === 0) {
                                                peg$fail(peg$c61)
                                              }
                                            }
                                            if (s0 === peg$FAILED) {
                                              if (
                                                input
                                                  .substr(peg$currPos, 3)
                                                  .toLowerCase() === peg$c62
                                              ) {
                                                s0 = input.substr(
                                                  peg$currPos,
                                                  3
                                                )
                                                peg$currPos += 3
                                              } else {
                                                s0 = peg$FAILED
                                                if (peg$silentFails === 0) {
                                                  peg$fail(peg$c63)
                                                }
                                              }
                                              if (s0 === peg$FAILED) {
                                                if (
                                                  input
                                                    .substr(peg$currPos, 3)
                                                    .toLowerCase() === peg$c64
                                                ) {
                                                  s0 = input.substr(
                                                    peg$currPos,
                                                    3
                                                  )
                                                  peg$currPos += 3
                                                } else {
                                                  s0 = peg$FAILED
                                                  if (peg$silentFails === 0) {
                                                    peg$fail(peg$c65)
                                                  }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  if (
                                                    input
                                                      .substr(peg$currPos, 3)
                                                      .toLowerCase() === peg$c66
                                                  ) {
                                                    s0 = input.substr(
                                                      peg$currPos,
                                                      3
                                                    )
                                                    peg$currPos += 3
                                                  } else {
                                                    s0 = peg$FAILED
                                                    if (peg$silentFails === 0) {
                                                      peg$fail(peg$c67)
                                                    }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    if (
                                                      input
                                                        .substr(peg$currPos, 3)
                                                        .toLowerCase() ===
                                                      peg$c68
                                                    ) {
                                                      s0 = input.substr(
                                                        peg$currPos,
                                                        3
                                                      )
                                                      peg$currPos += 3
                                                    } else {
                                                      s0 = peg$FAILED
                                                      if (
                                                        peg$silentFails === 0
                                                      ) {
                                                        peg$fail(peg$c69)
                                                      }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      if (
                                                        input
                                                          .substr(
                                                            peg$currPos,
                                                            3
                                                          )
                                                          .toLowerCase() ===
                                                        peg$c70
                                                      ) {
                                                        s0 = input.substr(
                                                          peg$currPos,
                                                          3
                                                        )
                                                        peg$currPos += 3
                                                      } else {
                                                        s0 = peg$FAILED
                                                        if (
                                                          peg$silentFails === 0
                                                        ) {
                                                          peg$fail(peg$c71)
                                                        }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        if (
                                                          input
                                                            .substr(
                                                              peg$currPos,
                                                              3
                                                            )
                                                            .toLowerCase() ===
                                                          peg$c72
                                                        ) {
                                                          s0 = input.substr(
                                                            peg$currPos,
                                                            3
                                                          )
                                                          peg$currPos += 3
                                                        } else {
                                                          s0 = peg$FAILED
                                                          if (
                                                            peg$silentFails ===
                                                            0
                                                          ) {
                                                            peg$fail(peg$c73)
                                                          }
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          if (
                                                            input
                                                              .substr(
                                                                peg$currPos,
                                                                3
                                                              )
                                                              .toLowerCase() ===
                                                            peg$c74
                                                          ) {
                                                            s0 = input.substr(
                                                              peg$currPos,
                                                              3
                                                            )
                                                            peg$currPos += 3
                                                          } else {
                                                            s0 = peg$FAILED
                                                            if (
                                                              peg$silentFails ===
                                                              0
                                                            ) {
                                                              peg$fail(peg$c75)
                                                            }
                                                          }
                                                          if (
                                                            s0 === peg$FAILED
                                                          ) {
                                                            if (
                                                              input
                                                                .substr(
                                                                  peg$currPos,
                                                                  3
                                                                )
                                                                .toLowerCase() ===
                                                              peg$c76
                                                            ) {
                                                              s0 = input.substr(
                                                                peg$currPos,
                                                                3
                                                              )
                                                              peg$currPos += 3
                                                            } else {
                                                              s0 = peg$FAILED
                                                              if (
                                                                peg$silentFails ===
                                                                0
                                                              ) {
                                                                peg$fail(
                                                                  peg$c77
                                                                )
                                                              }
                                                            }
                                                            if (
                                                              s0 === peg$FAILED
                                                            ) {
                                                              if (
                                                                input
                                                                  .substr(
                                                                    peg$currPos,
                                                                    3
                                                                  )
                                                                  .toLowerCase() ===
                                                                peg$c78
                                                              ) {
                                                                s0 = input.substr(
                                                                  peg$currPos,
                                                                  3
                                                                )
                                                                peg$currPos += 3
                                                              } else {
                                                                s0 = peg$FAILED
                                                                if (
                                                                  peg$silentFails ===
                                                                  0
                                                                ) {
                                                                  peg$fail(
                                                                    peg$c79
                                                                  )
                                                                }
                                                              }
                                                              if (
                                                                s0 ===
                                                                peg$FAILED
                                                              ) {
                                                                if (
                                                                  input
                                                                    .substr(
                                                                      peg$currPos,
                                                                      3
                                                                    )
                                                                    .toLowerCase() ===
                                                                  peg$c80
                                                                ) {
                                                                  s0 = input.substr(
                                                                    peg$currPos,
                                                                    3
                                                                  )
                                                                  peg$currPos += 3
                                                                } else {
                                                                  s0 = peg$FAILED
                                                                  if (
                                                                    peg$silentFails ===
                                                                    0
                                                                  ) {
                                                                    peg$fail(
                                                                      peg$c81
                                                                    )
                                                                  }
                                                                }
                                                                if (
                                                                  s0 ===
                                                                  peg$FAILED
                                                                ) {
                                                                  if (
                                                                    input
                                                                      .substr(
                                                                        peg$currPos,
                                                                        3
                                                                      )
                                                                      .toLowerCase() ===
                                                                    peg$c82
                                                                  ) {
                                                                    s0 = input.substr(
                                                                      peg$currPos,
                                                                      3
                                                                    )
                                                                    peg$currPos += 3
                                                                  } else {
                                                                    s0 = peg$FAILED
                                                                    if (
                                                                      peg$silentFails ===
                                                                      0
                                                                    ) {
                                                                      peg$fail(
                                                                        peg$c83
                                                                      )
                                                                    }
                                                                  }
                                                                  if (
                                                                    s0 ===
                                                                    peg$FAILED
                                                                  ) {
                                                                    if (
                                                                      input
                                                                        .substr(
                                                                          peg$currPos,
                                                                          3
                                                                        )
                                                                        .toLowerCase() ===
                                                                      peg$c84
                                                                    ) {
                                                                      s0 = input.substr(
                                                                        peg$currPos,
                                                                        3
                                                                      )
                                                                      peg$currPos += 3
                                                                    } else {
                                                                      s0 = peg$FAILED
                                                                      if (
                                                                        peg$silentFails ===
                                                                        0
                                                                      ) {
                                                                        peg$fail(
                                                                          peg$c85
                                                                        )
                                                                      }
                                                                    }
                                                                    if (
                                                                      s0 ===
                                                                      peg$FAILED
                                                                    ) {
                                                                      if (
                                                                        input
                                                                          .substr(
                                                                            peg$currPos,
                                                                            3
                                                                          )
                                                                          .toLowerCase() ===
                                                                        peg$c86
                                                                      ) {
                                                                        s0 = input.substr(
                                                                          peg$currPos,
                                                                          3
                                                                        )
                                                                        peg$currPos += 3
                                                                      } else {
                                                                        s0 = peg$FAILED
                                                                        if (
                                                                          peg$silentFails ===
                                                                          0
                                                                        ) {
                                                                          peg$fail(
                                                                            peg$c87
                                                                          )
                                                                        }
                                                                      }
                                                                      if (
                                                                        s0 ===
                                                                        peg$FAILED
                                                                      ) {
                                                                        if (
                                                                          input
                                                                            .substr(
                                                                              peg$currPos,
                                                                              3
                                                                            )
                                                                            .toLowerCase() ===
                                                                          peg$c88
                                                                        ) {
                                                                          s0 = input.substr(
                                                                            peg$currPos,
                                                                            3
                                                                          )
                                                                          peg$currPos += 3
                                                                        } else {
                                                                          s0 = peg$FAILED
                                                                          if (
                                                                            peg$silentFails ===
                                                                            0
                                                                          ) {
                                                                            peg$fail(
                                                                              peg$c89
                                                                            )
                                                                          }
                                                                        }
                                                                        if (
                                                                          s0 ===
                                                                          peg$FAILED
                                                                        ) {
                                                                          if (
                                                                            input
                                                                              .substr(
                                                                                peg$currPos,
                                                                                3
                                                                              )
                                                                              .toLowerCase() ===
                                                                            peg$c90
                                                                          ) {
                                                                            s0 = input.substr(
                                                                              peg$currPos,
                                                                              3
                                                                            )
                                                                            peg$currPos += 3
                                                                          } else {
                                                                            s0 = peg$FAILED
                                                                            if (
                                                                              peg$silentFails ===
                                                                              0
                                                                            ) {
                                                                              peg$fail(
                                                                                peg$c91
                                                                              )
                                                                            }
                                                                          }
                                                                          if (
                                                                            s0 ===
                                                                            peg$FAILED
                                                                          ) {
                                                                            if (
                                                                              input
                                                                                .substr(
                                                                                  peg$currPos,
                                                                                  3
                                                                                )
                                                                                .toLowerCase() ===
                                                                              peg$c92
                                                                            ) {
                                                                              s0 = input.substr(
                                                                                peg$currPos,
                                                                                3
                                                                              )
                                                                              peg$currPos += 3
                                                                            } else {
                                                                              s0 = peg$FAILED
                                                                              if (
                                                                                peg$silentFails ===
                                                                                0
                                                                              ) {
                                                                                peg$fail(
                                                                                  peg$c93
                                                                                )
                                                                              }
                                                                            }
                                                                            if (
                                                                              s0 ===
                                                                              peg$FAILED
                                                                            ) {
                                                                              if (
                                                                                input
                                                                                  .substr(
                                                                                    peg$currPos,
                                                                                    3
                                                                                  )
                                                                                  .toLowerCase() ===
                                                                                peg$c94
                                                                              ) {
                                                                                s0 = input.substr(
                                                                                  peg$currPos,
                                                                                  3
                                                                                )
                                                                                peg$currPos += 3
                                                                              } else {
                                                                                s0 = peg$FAILED
                                                                                if (
                                                                                  peg$silentFails ===
                                                                                  0
                                                                                ) {
                                                                                  peg$fail(
                                                                                    peg$c95
                                                                                  )
                                                                                }
                                                                              }
                                                                              if (
                                                                                s0 ===
                                                                                peg$FAILED
                                                                              ) {
                                                                                if (
                                                                                  input
                                                                                    .substr(
                                                                                      peg$currPos,
                                                                                      3
                                                                                    )
                                                                                    .toLowerCase() ===
                                                                                  peg$c96
                                                                                ) {
                                                                                  s0 = input.substr(
                                                                                    peg$currPos,
                                                                                    3
                                                                                  )
                                                                                  peg$currPos += 3
                                                                                } else {
                                                                                  s0 = peg$FAILED
                                                                                  if (
                                                                                    peg$silentFails ===
                                                                                    0
                                                                                  ) {
                                                                                    peg$fail(
                                                                                      peg$c97
                                                                                    )
                                                                                  }
                                                                                }
                                                                                if (
                                                                                  s0 ===
                                                                                  peg$FAILED
                                                                                ) {
                                                                                  if (
                                                                                    input
                                                                                      .substr(
                                                                                        peg$currPos,
                                                                                        3
                                                                                      )
                                                                                      .toLowerCase() ===
                                                                                    peg$c98
                                                                                  ) {
                                                                                    s0 = input.substr(
                                                                                      peg$currPos,
                                                                                      3
                                                                                    )
                                                                                    peg$currPos += 3
                                                                                  } else {
                                                                                    s0 = peg$FAILED
                                                                                    if (
                                                                                      peg$silentFails ===
                                                                                      0
                                                                                    ) {
                                                                                      peg$fail(
                                                                                        peg$c99
                                                                                      )
                                                                                    }
                                                                                  }
                                                                                  if (
                                                                                    s0 ===
                                                                                    peg$FAILED
                                                                                  ) {
                                                                                    if (
                                                                                      input
                                                                                        .substr(
                                                                                          peg$currPos,
                                                                                          3
                                                                                        )
                                                                                        .toLowerCase() ===
                                                                                      peg$c100
                                                                                    ) {
                                                                                      s0 = input.substr(
                                                                                        peg$currPos,
                                                                                        3
                                                                                      )
                                                                                      peg$currPos += 3
                                                                                    } else {
                                                                                      s0 = peg$FAILED
                                                                                      if (
                                                                                        peg$silentFails ===
                                                                                        0
                                                                                      ) {
                                                                                        peg$fail(
                                                                                          peg$c101
                                                                                        )
                                                                                      }
                                                                                    }
                                                                                    if (
                                                                                      s0 ===
                                                                                      peg$FAILED
                                                                                    ) {
                                                                                      if (
                                                                                        input
                                                                                          .substr(
                                                                                            peg$currPos,
                                                                                            3
                                                                                          )
                                                                                          .toLowerCase() ===
                                                                                        peg$c102
                                                                                      ) {
                                                                                        s0 = input.substr(
                                                                                          peg$currPos,
                                                                                          3
                                                                                        )
                                                                                        peg$currPos += 3
                                                                                      } else {
                                                                                        s0 = peg$FAILED
                                                                                        if (
                                                                                          peg$silentFails ===
                                                                                          0
                                                                                        ) {
                                                                                          peg$fail(
                                                                                            peg$c103
                                                                                          )
                                                                                        }
                                                                                      }
                                                                                      if (
                                                                                        s0 ===
                                                                                        peg$FAILED
                                                                                      ) {
                                                                                        if (
                                                                                          input
                                                                                            .substr(
                                                                                              peg$currPos,
                                                                                              3
                                                                                            )
                                                                                            .toLowerCase() ===
                                                                                          peg$c104
                                                                                        ) {
                                                                                          s0 = input.substr(
                                                                                            peg$currPos,
                                                                                            3
                                                                                          )
                                                                                          peg$currPos += 3
                                                                                        } else {
                                                                                          s0 = peg$FAILED
                                                                                          if (
                                                                                            peg$silentFails ===
                                                                                            0
                                                                                          ) {
                                                                                            peg$fail(
                                                                                              peg$c105
                                                                                            )
                                                                                          }
                                                                                        }
                                                                                        if (
                                                                                          s0 ===
                                                                                          peg$FAILED
                                                                                        ) {
                                                                                          if (
                                                                                            input
                                                                                              .substr(
                                                                                                peg$currPos,
                                                                                                3
                                                                                              )
                                                                                              .toLowerCase() ===
                                                                                            peg$c106
                                                                                          ) {
                                                                                            s0 = input.substr(
                                                                                              peg$currPos,
                                                                                              3
                                                                                            )
                                                                                            peg$currPos += 3
                                                                                          } else {
                                                                                            s0 = peg$FAILED
                                                                                            if (
                                                                                              peg$silentFails ===
                                                                                              0
                                                                                            ) {
                                                                                              peg$fail(
                                                                                                peg$c107
                                                                                              )
                                                                                            }
                                                                                          }
                                                                                          if (
                                                                                            s0 ===
                                                                                            peg$FAILED
                                                                                          ) {
                                                                                            if (
                                                                                              input
                                                                                                .substr(
                                                                                                  peg$currPos,
                                                                                                  3
                                                                                                )
                                                                                                .toLowerCase() ===
                                                                                              peg$c108
                                                                                            ) {
                                                                                              s0 = input.substr(
                                                                                                peg$currPos,
                                                                                                3
                                                                                              )
                                                                                              peg$currPos += 3
                                                                                            } else {
                                                                                              s0 = peg$FAILED
                                                                                              if (
                                                                                                peg$silentFails ===
                                                                                                0
                                                                                              ) {
                                                                                                peg$fail(
                                                                                                  peg$c109
                                                                                                )
                                                                                              }
                                                                                            }
                                                                                            if (
                                                                                              s0 ===
                                                                                              peg$FAILED
                                                                                            ) {
                                                                                              if (
                                                                                                input
                                                                                                  .substr(
                                                                                                    peg$currPos,
                                                                                                    3
                                                                                                  )
                                                                                                  .toLowerCase() ===
                                                                                                peg$c110
                                                                                              ) {
                                                                                                s0 = input.substr(
                                                                                                  peg$currPos,
                                                                                                  3
                                                                                                )
                                                                                                peg$currPos += 3
                                                                                              } else {
                                                                                                s0 = peg$FAILED
                                                                                                if (
                                                                                                  peg$silentFails ===
                                                                                                  0
                                                                                                ) {
                                                                                                  peg$fail(
                                                                                                    peg$c111
                                                                                                  )
                                                                                                }
                                                                                              }
                                                                                              if (
                                                                                                s0 ===
                                                                                                peg$FAILED
                                                                                              ) {
                                                                                                if (
                                                                                                  input
                                                                                                    .substr(
                                                                                                      peg$currPos,
                                                                                                      3
                                                                                                    )
                                                                                                    .toLowerCase() ===
                                                                                                  peg$c112
                                                                                                ) {
                                                                                                  s0 = input.substr(
                                                                                                    peg$currPos,
                                                                                                    3
                                                                                                  )
                                                                                                  peg$currPos += 3
                                                                                                } else {
                                                                                                  s0 = peg$FAILED
                                                                                                  if (
                                                                                                    peg$silentFails ===
                                                                                                    0
                                                                                                  ) {
                                                                                                    peg$fail(
                                                                                                      peg$c113
                                                                                                    )
                                                                                                  }
                                                                                                }
                                                                                                if (
                                                                                                  s0 ===
                                                                                                  peg$FAILED
                                                                                                ) {
                                                                                                  if (
                                                                                                    input
                                                                                                      .substr(
                                                                                                        peg$currPos,
                                                                                                        3
                                                                                                      )
                                                                                                      .toLowerCase() ===
                                                                                                    peg$c114
                                                                                                  ) {
                                                                                                    s0 = input.substr(
                                                                                                      peg$currPos,
                                                                                                      3
                                                                                                    )
                                                                                                    peg$currPos += 3
                                                                                                  } else {
                                                                                                    s0 = peg$FAILED
                                                                                                    if (
                                                                                                      peg$silentFails ===
                                                                                                      0
                                                                                                    ) {
                                                                                                      peg$fail(
                                                                                                        peg$c115
                                                                                                      )
                                                                                                    }
                                                                                                  }
                                                                                                  if (
                                                                                                    s0 ===
                                                                                                    peg$FAILED
                                                                                                  ) {
                                                                                                    if (
                                                                                                      input
                                                                                                        .substr(
                                                                                                          peg$currPos,
                                                                                                          3
                                                                                                        )
                                                                                                        .toLowerCase() ===
                                                                                                      peg$c116
                                                                                                    ) {
                                                                                                      s0 = input.substr(
                                                                                                        peg$currPos,
                                                                                                        3
                                                                                                      )
                                                                                                      peg$currPos += 3
                                                                                                    } else {
                                                                                                      s0 = peg$FAILED
                                                                                                      if (
                                                                                                        peg$silentFails ===
                                                                                                        0
                                                                                                      ) {
                                                                                                        peg$fail(
                                                                                                          peg$c117
                                                                                                        )
                                                                                                      }
                                                                                                    }
                                                                                                    if (
                                                                                                      s0 ===
                                                                                                      peg$FAILED
                                                                                                    ) {
                                                                                                      if (
                                                                                                        input
                                                                                                          .substr(
                                                                                                            peg$currPos,
                                                                                                            3
                                                                                                          )
                                                                                                          .toLowerCase() ===
                                                                                                        peg$c118
                                                                                                      ) {
                                                                                                        s0 = input.substr(
                                                                                                          peg$currPos,
                                                                                                          3
                                                                                                        )
                                                                                                        peg$currPos += 3
                                                                                                      } else {
                                                                                                        s0 = peg$FAILED
                                                                                                        if (
                                                                                                          peg$silentFails ===
                                                                                                          0
                                                                                                        ) {
                                                                                                          peg$fail(
                                                                                                            peg$c119
                                                                                                          )
                                                                                                        }
                                                                                                      }
                                                                                                      if (
                                                                                                        s0 ===
                                                                                                        peg$FAILED
                                                                                                      ) {
                                                                                                        if (
                                                                                                          input
                                                                                                            .substr(
                                                                                                              peg$currPos,
                                                                                                              3
                                                                                                            )
                                                                                                            .toLowerCase() ===
                                                                                                          peg$c120
                                                                                                        ) {
                                                                                                          s0 = input.substr(
                                                                                                            peg$currPos,
                                                                                                            3
                                                                                                          )
                                                                                                          peg$currPos += 3
                                                                                                        } else {
                                                                                                          s0 = peg$FAILED
                                                                                                          if (
                                                                                                            peg$silentFails ===
                                                                                                            0
                                                                                                          ) {
                                                                                                            peg$fail(
                                                                                                              peg$c121
                                                                                                            )
                                                                                                          }
                                                                                                        }
                                                                                                        if (
                                                                                                          s0 ===
                                                                                                          peg$FAILED
                                                                                                        ) {
                                                                                                          if (
                                                                                                            input
                                                                                                              .substr(
                                                                                                                peg$currPos,
                                                                                                                3
                                                                                                              )
                                                                                                              .toLowerCase() ===
                                                                                                            peg$c122
                                                                                                          ) {
                                                                                                            s0 = input.substr(
                                                                                                              peg$currPos,
                                                                                                              3
                                                                                                            )
                                                                                                            peg$currPos += 3
                                                                                                          } else {
                                                                                                            s0 = peg$FAILED
                                                                                                            if (
                                                                                                              peg$silentFails ===
                                                                                                              0
                                                                                                            ) {
                                                                                                              peg$fail(
                                                                                                                peg$c123
                                                                                                              )
                                                                                                            }
                                                                                                          }
                                                                                                          if (
                                                                                                            s0 ===
                                                                                                            peg$FAILED
                                                                                                          ) {
                                                                                                            if (
                                                                                                              input
                                                                                                                .substr(
                                                                                                                  peg$currPos,
                                                                                                                  3
                                                                                                                )
                                                                                                                .toLowerCase() ===
                                                                                                              peg$c124
                                                                                                            ) {
                                                                                                              s0 = input.substr(
                                                                                                                peg$currPos,
                                                                                                                3
                                                                                                              )
                                                                                                              peg$currPos += 3
                                                                                                            } else {
                                                                                                              s0 = peg$FAILED
                                                                                                              if (
                                                                                                                peg$silentFails ===
                                                                                                                0
                                                                                                              ) {
                                                                                                                peg$fail(
                                                                                                                  peg$c125
                                                                                                                )
                                                                                                              }
                                                                                                            }
                                                                                                            if (
                                                                                                              s0 ===
                                                                                                              peg$FAILED
                                                                                                            ) {
                                                                                                              if (
                                                                                                                input
                                                                                                                  .substr(
                                                                                                                    peg$currPos,
                                                                                                                    3
                                                                                                                  )
                                                                                                                  .toLowerCase() ===
                                                                                                                peg$c126
                                                                                                              ) {
                                                                                                                s0 = input.substr(
                                                                                                                  peg$currPos,
                                                                                                                  3
                                                                                                                )
                                                                                                                peg$currPos += 3
                                                                                                              } else {
                                                                                                                s0 = peg$FAILED
                                                                                                                if (
                                                                                                                  peg$silentFails ===
                                                                                                                  0
                                                                                                                ) {
                                                                                                                  peg$fail(
                                                                                                                    peg$c127
                                                                                                                  )
                                                                                                                }
                                                                                                              }
                                                                                                              if (
                                                                                                                s0 ===
                                                                                                                peg$FAILED
                                                                                                              ) {
                                                                                                                if (
                                                                                                                  input
                                                                                                                    .substr(
                                                                                                                      peg$currPos,
                                                                                                                      3
                                                                                                                    )
                                                                                                                    .toLowerCase() ===
                                                                                                                  peg$c128
                                                                                                                ) {
                                                                                                                  s0 = input.substr(
                                                                                                                    peg$currPos,
                                                                                                                    3
                                                                                                                  )
                                                                                                                  peg$currPos += 3
                                                                                                                } else {
                                                                                                                  s0 = peg$FAILED
                                                                                                                  if (
                                                                                                                    peg$silentFails ===
                                                                                                                    0
                                                                                                                  ) {
                                                                                                                    peg$fail(
                                                                                                                      peg$c129
                                                                                                                    )
                                                                                                                  }
                                                                                                                }
                                                                                                                if (
                                                                                                                  s0 ===
                                                                                                                  peg$FAILED
                                                                                                                ) {
                                                                                                                  if (
                                                                                                                    input
                                                                                                                      .substr(
                                                                                                                        peg$currPos,
                                                                                                                        3
                                                                                                                      )
                                                                                                                      .toLowerCase() ===
                                                                                                                    peg$c130
                                                                                                                  ) {
                                                                                                                    s0 = input.substr(
                                                                                                                      peg$currPos,
                                                                                                                      3
                                                                                                                    )
                                                                                                                    peg$currPos += 3
                                                                                                                  } else {
                                                                                                                    s0 = peg$FAILED
                                                                                                                    if (
                                                                                                                      peg$silentFails ===
                                                                                                                      0
                                                                                                                    ) {
                                                                                                                      peg$fail(
                                                                                                                        peg$c131
                                                                                                                      )
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c19)
      }
    }

    return s0
  }

  function peg$parseParameters() {
    var s0, s1

    peg$silentFails++
    s0 = peg$parseIndexedIndirect()
    if (s0 === peg$FAILED) {
      s0 = peg$parseIndirectIndexed()
      if (s0 === peg$FAILED) {
        s0 = peg$parseAddressWithOffset()
        if (s0 === peg$FAILED) {
          s0 = peg$parseAddress()
          if (s0 === peg$FAILED) {
            s0 = peg$parseImmediateValue()
            if (s0 === peg$FAILED) {
              s0 = peg$parseIndirect()
              if (s0 === peg$FAILED) {
                s0 = peg$parseImplicit()
                if (s0 === peg$FAILED) {
                  s0 = peg$parseLabel()
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c132)
      }
    }

    return s0
  }

  function peg$parseImplicit() {
    var s0

    if (input.substr(peg$currPos, 1).toLowerCase() === peg$c133) {
      s0 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s0 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c134)
      }
    }

    return s0
  }

  function peg$parseIndirect() {
    var s0, s1, s2, s3

    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 40) {
      s1 = peg$c135
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c136)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseAbsoluteAddress()
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 41) {
          s3 = peg$c137
          peg$currPos++
        } else {
          s3 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c138)
          }
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0
          s1 = peg$c139(s2)
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }

    return s0
  }

  function peg$parseIndexedIndirect() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 40) {
      s1 = peg$c135
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c136)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseZeroPageAddress()
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c141) {
          s3 = input.substr(peg$currPos, 3)
          peg$currPos += 3
        } else {
          s3 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c142)
          }
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0
          s1 = peg$c143(s2)
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c140)
      }
    }

    return s0
  }

  function peg$parseIndirectIndexed() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 40) {
      s1 = peg$c135
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c136)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseZeroPageAddress()
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c145) {
          s3 = input.substr(peg$currPos, 3)
          peg$currPos += 3
        } else {
          s3 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c146)
          }
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0
          s1 = peg$c147(s2)
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c144)
      }
    }

    return s0
  }

  function peg$parseAddress() {
    var s0, s1

    peg$silentFails++
    s0 = peg$parseAbsoluteAddress()
    if (s0 === peg$FAILED) {
      s0 = peg$parseZeroPageAddress()
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c148)
      }
    }

    return s0
  }

  function peg$parseAddressWithOffset() {
    var s0, s1, s2, s3

    s0 = peg$currPos
    s1 = peg$parseAddress()
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 44) {
        s2 = peg$c149
        peg$currPos++
      } else {
        s2 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c150)
        }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseRegisters()
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0
          s1 = peg$c151(s1, s3)
          s0 = s1
        } else {
          peg$currPos = s0
          s0 = peg$FAILED
        }
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }

    return s0
  }

  function peg$parseZeroPageAddress() {
    var s0, s1, s2

    peg$silentFails++
    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 36) {
      s1 = peg$c153
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c154)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseOneByteHex()
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0
        s1 = peg$c155(s2)
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c152)
      }
    }

    return s0
  }

  function peg$parseAbsoluteAddress() {
    var s0, s1, s2

    peg$silentFails++
    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 36) {
      s1 = peg$c153
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c154)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseTwoByteHex()
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0
        s1 = peg$c157(s2)
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c156)
      }
    }

    return s0
  }

  function peg$parseRegisterParam() {
    var s0, s1, s2

    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 44) {
      s1 = peg$c149
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c150)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseRegisters()
      if (s2 !== peg$FAILED) {
        s1 = [s1, s2]
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }

    return s0
  }

  function peg$parseRegisters() {
    var s0

    if (input.substr(peg$currPos, 1).toLowerCase() === peg$c158) {
      s0 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s0 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c159)
      }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c160) {
        s0 = input.charAt(peg$currPos)
        peg$currPos++
      } else {
        s0 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c161)
        }
      }
    }

    return s0
  }

  function peg$parseImmediateValue() {
    var s0, s1, s2

    peg$silentFails++
    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 35) {
      s1 = peg$c163
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c164)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseNumber()
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0
        s1 = peg$c165(s2)
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c162)
      }
    }

    return s0
  }

  function peg$parseNumber() {
    var s0, s1

    peg$silentFails++
    s0 = peg$parseHex()
    if (s0 === peg$FAILED) {
      s0 = peg$parseBinaryString()
      if (s0 === peg$FAILED) {
        s0 = peg$parseInteger()
      }
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c166)
      }
    }

    return s0
  }

  function peg$parseHex() {
    var s0, s1, s2

    peg$silentFails++
    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 36) {
      s1 = peg$c153
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c154)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseHexType()
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0
        s1 = peg$c168(s2)
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c167)
      }
    }

    return s0
  }

  function peg$parseHexType() {
    var s0

    s0 = peg$parseTwoByteHex()
    if (s0 === peg$FAILED) {
      s0 = peg$parseOneByteHex()
    }

    return s0
  }

  function peg$parseOneByteHex() {
    var s0, s1, s2, s3

    s0 = peg$currPos
    s1 = peg$currPos
    if (peg$c169.test(input.charAt(peg$currPos))) {
      s2 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s2 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c170)
      }
    }
    if (s2 !== peg$FAILED) {
      if (peg$c169.test(input.charAt(peg$currPos))) {
        s3 = input.charAt(peg$currPos)
        peg$currPos++
      } else {
        s3 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c170)
        }
      }
      if (s3 !== peg$FAILED) {
        s2 = [s2, s3]
        s1 = s2
      } else {
        peg$currPos = s1
        s1 = peg$FAILED
      }
    } else {
      peg$currPos = s1
      s1 = peg$FAILED
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0
      s1 = peg$c171(s1)
    }
    s0 = s1

    return s0
  }

  function peg$parseTwoByteHex() {
    var s0, s1, s2, s3, s4

    s0 = peg$currPos
    s1 = peg$currPos
    if (peg$c169.test(input.charAt(peg$currPos))) {
      s2 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s2 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c170)
      }
    }
    if (s2 !== peg$FAILED) {
      if (peg$c169.test(input.charAt(peg$currPos))) {
        s3 = input.charAt(peg$currPos)
        peg$currPos++
      } else {
        s3 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c170)
        }
      }
      if (s3 !== peg$FAILED) {
        s2 = [s2, s3]
        s1 = s2
      } else {
        peg$currPos = s1
        s1 = peg$FAILED
      }
    } else {
      peg$currPos = s1
      s1 = peg$FAILED
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$currPos
      if (peg$c169.test(input.charAt(peg$currPos))) {
        s3 = input.charAt(peg$currPos)
        peg$currPos++
      } else {
        s3 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c170)
        }
      }
      if (s3 !== peg$FAILED) {
        if (peg$c169.test(input.charAt(peg$currPos))) {
          s4 = input.charAt(peg$currPos)
          peg$currPos++
        } else {
          s4 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c170)
          }
        }
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4]
          s2 = s3
        } else {
          peg$currPos = s2
          s2 = peg$FAILED
        }
      } else {
        peg$currPos = s2
        s2 = peg$FAILED
      }
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0
        s1 = peg$c172(s1, s2)
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }

    return s0
  }

  function peg$parseBinaryString() {
    var s0, s1, s2

    peg$silentFails++
    s0 = peg$currPos
    if (input.charCodeAt(peg$currPos) === 37) {
      s1 = peg$c174
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c175)
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseBinary()
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0
        s1 = peg$c176(s2)
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c173)
      }
    }

    return s0
  }

  function peg$parseBinary() {
    var s0, s1, s2

    peg$silentFails++
    s0 = peg$currPos
    s1 = []
    if (peg$c178.test(input.charAt(peg$currPos))) {
      s2 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s2 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c179)
      }
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2)
        if (peg$c178.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos)
          peg$currPos++
        } else {
          s2 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c179)
          }
        }
      }
    } else {
      s1 = peg$FAILED
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0
      s1 = peg$c180(s1)
    }
    s0 = s1
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c177)
      }
    }

    return s0
  }

  function peg$parseInteger() {
    var s0, s1, s2, s3

    peg$silentFails++
    s0 = peg$currPos
    s1 = peg$parse_()
    if (s1 !== peg$FAILED) {
      s2 = []
      if (peg$c182.test(input.charAt(peg$currPos))) {
        s3 = input.charAt(peg$currPos)
        peg$currPos++
      } else {
        s3 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c183)
        }
      }
      if (s3 !== peg$FAILED) {
        while (s3 !== peg$FAILED) {
          s2.push(s3)
          if (peg$c182.test(input.charAt(peg$currPos))) {
            s3 = input.charAt(peg$currPos)
            peg$currPos++
          } else {
            s3 = peg$FAILED
            if (peg$silentFails === 0) {
              peg$fail(peg$c183)
            }
          }
        }
      } else {
        s2 = peg$FAILED
      }
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0
        s1 = peg$c184()
        s0 = s1
      } else {
        peg$currPos = s0
        s0 = peg$FAILED
      }
    } else {
      peg$currPos = s0
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c181)
      }
    }

    return s0
  }

  function peg$parseString() {
    var s0, s1, s2

    peg$silentFails++
    s0 = peg$currPos
    s1 = []
    if (peg$c186.test(input.charAt(peg$currPos))) {
      s2 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s2 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c187)
      }
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2)
        if (peg$c186.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos)
          peg$currPos++
        } else {
          s2 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c187)
          }
        }
      }
    } else {
      s1 = peg$FAILED
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0
      s1 = peg$c188()
    }
    s0 = s1
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c185)
      }
    }

    return s0
  }

  function peg$parse_() {
    var s0, s1

    peg$silentFails++
    s0 = []
    if (peg$c190.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c191)
      }
    }
    while (s1 !== peg$FAILED) {
      s0.push(s1)
      if (peg$c190.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos)
        peg$currPos++
      } else {
        s1 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c191)
        }
      }
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c189)
      }
    }

    return s0
  }

  function peg$parse_S() {
    var s0, s1

    peg$silentFails++
    s0 = []
    if (peg$c192.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c193)
      }
    }
    if (s1 !== peg$FAILED) {
      while (s1 !== peg$FAILED) {
        s0.push(s1)
        if (peg$c192.test(input.charAt(peg$currPos))) {
          s1 = input.charAt(peg$currPos)
          peg$currPos++
        } else {
          s1 = peg$FAILED
          if (peg$silentFails === 0) {
            peg$fail(peg$c193)
          }
        }
      }
    } else {
      s0 = peg$FAILED
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c189)
      }
    }

    return s0
  }

  function peg$parse_N() {
    var s0, s1

    peg$silentFails++
    s0 = []
    if (peg$c195.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos)
      peg$currPos++
    } else {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c196)
      }
    }
    while (s1 !== peg$FAILED) {
      s0.push(s1)
      if (peg$c195.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos)
        peg$currPos++
      } else {
        s1 = peg$FAILED
        if (peg$silentFails === 0) {
          peg$fail(peg$c196)
        }
      }
    }
    peg$silentFails--
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED
      if (peg$silentFails === 0) {
        peg$fail(peg$c194)
      }
    }

    return s0
  }

  peg$result = peg$startRuleFunction()

  if (peg$result !== peg$FAILED && peg$currPos === input.length) {
    return peg$result
  } else {
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
      peg$fail(peg$endExpectation())
    }

    throw peg$buildStructuredError(
      peg$maxFailExpected,
      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
      peg$maxFailPos < input.length
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
    )
  }
}

module.exports = {
  SyntaxError: peg$SyntaxError,
  parse: peg$parse
}
